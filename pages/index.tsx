import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import React, { useEffect } from "react";
import styles from "../styles/Home.module.scss";
import { calculateSplit } from "../utils/calculateSplit";

const Home: NextPage = () => {
  const [originalValue, setOriginalValue] = React.useState(234);
  const [valueWithTaxes, setValueWithTaxes] = React.useState(223.19);
  const [valueOfSplitSale, setValueOfSplitSale] = React.useState(90);

  const [splitCalculation, setSplitCalculation] = React.useState<{
    taxPercentile: string;
    valueOfSplitSaleWithTaxes: string;
    splitSaleWithFifteenPercentOfTheRemainder: string;
    remainderOfTheSplitSale: string;
    sumVerification: string;
  }>({
    taxPercentile: "",
    valueOfSplitSaleWithTaxes: "",
    splitSaleWithFifteenPercentOfTheRemainder: "",
    remainderOfTheSplitSale: "",
    sumVerification: "",
  });

  useEffect(() => {
    setSplitCalculation(
      calculateSplit(originalValue, valueWithTaxes, valueOfSplitSale)
    );
  }, [originalValue, valueWithTaxes, valueOfSplitSale]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          <label htmlFor="value1">Valor original:</label>
          <input
            value={originalValue}
            onChange={(e) => setOriginalValue(Number(e.target.value))}
            type="number"
            id="value1"
          />
        </div>

        <div>
          <label htmlFor="value2">Valor com taxas:</label>
          <input
            value={valueWithTaxes}
            onChange={(e) => setValueWithTaxes(Number(e.target.value))}
            type="number"
            id="value2"
          />
        </div>

        <div>
          <label htmlFor="value3">Valor da venda separada:</label>
          <input
            value={valueOfSplitSale}
            onChange={(e) => setValueOfSplitSale(Number(e.target.value))}
            type="number"
            id="value3"
          />
        </div>

        <h3>
          {`Percentual de taxa: R$ ${splitCalculation.taxPercentile} %`}
          <br />
          {`Valor da venda separada com taxas: R$ ${splitCalculation.valueOfSplitSaleWithTaxes}`}
          <br />
          <br />
          {`Venda + 15% (J): R$ ${splitCalculation.splitSaleWithFifteenPercentOfTheRemainder}`}
          <br />
          {`Restante da venda (M): R$ ${splitCalculation.remainderOfTheSplitSale}`}
          <br />
          <br />
          {`Verificação de soma: R$ ${splitCalculation.sumVerification}`}
        </h3>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
